[
  {
    "path": "posts/2021-07-05-non-parametric-matched-pair-testing-with-left-censored-data/",
    "title": "Non-parametric matched pair testing with left-censored data",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Ben Trueman",
        "url": {}
      }
    ],
    "date": "2021-07-05",
    "categories": [],
    "contents": "\nThere are few options in R for comparing matched pairs in two groups with left-censored data. And while NADA2::cen_signedranktest() is an excellent option, I wrote the following as another. It implements the Paired Prentice-Wilcoxon test, as described in @helsel_statistics_2012. I should also acknowledge the orphaned USGS’ orphaned package smwrQW [@smwrQW] for its version of the PPW test.\n\n\n\nThe ppw_test() function works like this:\n\n$statistic\n[1] -0.5628925\n\n$p.value\n[1] 0.5735081\n\nIt also does one-sided tests:\n\n$statistic\n[1] -2.918231\n\n$p.value\n[1] 0.001760118\n\nThe following codes tests that it gives the expected result when applied to the data in Table 9.7 of @helsel_statistics_2012.\n\n$statistic\n[1] 3.012394\n\n$p.value\n[1] 0.001295979\n\nAnd the following code tests that it gives the expected result on the data of @obrien_paired_1987.\n\n$statistic\n[1] 2.08696\n\n$p.value\n[1] 0.01844589\n\nReferences\n\n\n\n",
    "preview": {},
    "last_modified": "2021-07-05T17:53:39-03:00",
    "input_file": "non-parametric-matched-pair-testing-with-left-censored-data.utf8.md"
  },
  {
    "path": "posts/2021-06-29-peak-detection-for-qualitative-xrd-analysis-in-r/",
    "title": "Peak detection for qualitative XRD analysis in R",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Ben Trueman",
        "url": {}
      }
    ],
    "date": "2021-06-29",
    "categories": [],
    "contents": "\n\n\n\nThe data, from Li et al. (2021).\n\n\n\nA quick and dirty method of determining phase importance, for plotting purposes only:\n\n\n\n\n\n\nDetect peaks:\n\n\n\nAdd the identified peaks to the plot:\n\n\n\n\n\n\nLi, Bofu, Benjamin F. Trueman, Javier M. Locsin, Yaohuan Gao, Mohammad Shahedur Rahman, Yuri Park, and Graham A. Gagnon. 2021. “Impact of Sodium Silicate on Lead Release from Lead (Ii) Carbonate.” Environmental Science: Water Research & Technology 7 (3): 599–609. https://doi.org/10.1039/D0EW00886A.\n\n\n\n\n",
    "preview": "posts/2021-06-29-peak-detection-for-qualitative-xrd-analysis-in-r/peak-detection-for-qualitative-xrd-analysis-in-r_files/figure-html5/unnamed-chunk-1-1.png",
    "last_modified": "2021-06-30T11:22:51-03:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-06-18-lead-solubility-prediction-using-shiny/",
    "title": "Lead solubility prediction using shiny",
    "description": "An R package and shiny app for PHREEQC-based equilibrium lead and copper solubility prediction.",
    "author": [
      {
        "name": "Ben Trueman",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-06-18",
    "categories": [],
    "contents": "\nRecently, I’ve been experimenting with the excellent R package tidyphreeqc (Dunnington 2019), which provides a convenient interface for generating PHREEQC input files (Charlton and Parkhurst 2011; Parkhurst and Appelo 2013). tidyphreeqc incorporates easily into my workflow, and it’s found its way into several recent publications CITE LI.\nI’ve also used it to build a separate package (pbcusol (Trueman 2021)) that handles lead and copper solubility prediction specifically, with curated thermodynamic data and some domain specific features implemented in what is hopefully a straightforward collection of functions. pbcusol is implemented as a shiny app, available here.\npbcusol can be used to generate lead and copper solubility predictions that are comparable with those found in literature CITE SCHOCK, as detailed in the package README on GitHub.\n\n\n\npbcusol can also be used to generate predicted lead and copper solubility in the presence of humic substances. This is also outlined in the package README, but here is an example of the type of visualization that can be generated. Of course, these predictions should be properly validated—more on that later.\n\n\n\n\n\n\nCharlton, S. R., and D. L. Parkhurst. 2011. “Modules Based on the Geochemical Model Phreeqc for Use in Scripting and Programming Languages.” Computers & Geosciences 37: 1653–63. http://dx.doi.org/10.1016/j.cageo.2011.02.005.\n\n\nDunnington, Dewey. 2019. Tidyphreeqc: Tidy Geochemical Modeling Using Phreeqc. https://github.com/paleolimbot/tidyphreeqc.\n\n\nParkhurst, D. L., and C. A. J. Appelo. 2013. Description of Input and Examples for Phreeqc Version 3–a Computer Program for Speciation, Batch-Reaction, One-Dimensional Transport, and Inverse Geochemical Calculations. Vol. book 6. Techniques and Methods. U.S. Geological Survey. https://pubs.usgs.gov/tm/06/a43.\n\n\nTrueman, Benjamin. 2021. Pbcusol: Predict Lead and Copper Solubility. https://github.com/bentrueman/pbcusol.\n\n\n\n\n",
    "preview": "posts/2021-06-18-lead-solubility-prediction-using-shiny/lead-solubility-prediction-using-shiny_files/figure-html5/basic-grid-1.png",
    "last_modified": "2021-07-06T16:17:13-03:00",
    "input_file": "lead-solubility-prediction-using-shiny.utf8.md"
  }
]
